AWSTemplateFormatVersion: '2010-09-09'
Description: Pipeline CFN

Parameters:
    ApplicationName: 
        Description: This will be used to name the pipeline and build resources
        Type: String
        AllowedPattern: '[A-Za-z0-9-]+'
    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
    GitHubToken:
        NoEcho: 'true'
        Type: String
        Description: Secret. It might look something like 9b189a1654643522561f7b3ebd44a1531a4287af
          OAuthToken with access to Repo. Go to https://github.com/settings/tokens
    GitHubUser:
        Type: String
        Description: GitHub UserName
    Repo:
        Type: String
        Description: GitHub Repo to pull from. Only the Name. not the URL
    Branch:
        Type: String
        Description: Branch to use from Repo. Only the Name. not the URL
        Default: master
    ArtifactBucket:
        Description: "S3 Bucket to store pipeline content"
        Type: "String"
    TweetBucketName:
        Description: "S3 Bucket to store raw and processed tweets"
        Type: "String"
    ComparisonFaceS3Bucket:
        Description: "S3 bucket of the image to use as a comparison"
        Type: "String"      
    ComparisonFaceKey:
        Description: "S3 key of the image to use as a comparison"
        Type: "String"      
    SimilarityThreshold:
        Description: "Threshold of face match in Rekognotion comparison"
        Type: "String"
    MaxLabelDetection:
        Description: "Max Labels Recognition should detect"
        Type: "Number"      
    MinLabelConfidence:
        Description: "Minimum Confidence on label detection between 0-100"
        Type: "Number"      
    NotifierEmail:
        Description: "Email for face matches in Rekognition"
        Type: "String"      
    NotifierSMS:
        Description: "SMS Number to alert for face matches in Rekognition"
        Type: "String"

Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      -
        Label: 
          default: "Application Properties"
        Parameters:
          - ApplicationName
          - EnvironmentName
          - TweetBucketName
          - ArtifactBucket
      - 
        Label: 
          default: "GitHub"
        Parameters: 
          - GitHubUser
          - GitHubToken
          - Repo
          - Branch
      -
        Label: 
          default: "Notification"
        Parameters:
          - NotifierEmail
          - NotifierSMS
      -
        Label:
          default: "Rekognition Properties"
        Parameters:
          - ComparisonFaceS3Bucket
          - ComparisonFaceKey
          - SimilarityThreshold
          - MaxLabelDetection
          - MinLabelConfidence
    ParameterLabels: 
      VPCID: 
        default: "Which VPC should this be deployed to?"

Resources:
    BuildRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Principal:
                Service:
                - codebuild.amazonaws.com
                - codepipeline.amazonaws.com
                - cloudformation.amazonaws.com
              Action:
              - sts:AssumeRole
          Path: "/"

    PipelineS3Bucket:
      Type: "AWS::S3::Bucket"
      Properties: 
          BucketName: !Ref ArtifactBucket

    BuildPolicy:
        Type: AWS::IAM::Policy
        Properties:
          PolicyName: !Join ['-', [!Ref 'AWS::StackName', 'BuildPolicy']]
          Roles:
          - Ref: BuildRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action: 
                - "logs:*"
              Resource: "arn:aws:logs:*:*:*"
            - Effect: Allow
              Action:
                - "s3:GetObject"
                - "s3:GetObjectVersion"
                - "s3:GetBucketVersioning"
                - "s3:CreateBucket"
                - "s3:PutBucketPolicy"
                - "s3:PutObject"
                - "s3:DeleteBucket"
                - "s3:DeleteBucketPolicy"
              Resource: "*"
            - Effect: Allow
              Action:
                - "s3:PutObject"
              Resource:
                - "arn:aws:s3:::codepipeline*"
            - Effect: Allow
              Action:
                - "lambda:*"
              Resource: !Join [":", [ "arn:aws:lambda", !Ref "AWS::Region", !Ref "AWS::AccountId", "function:*" ]]
            - Effect: Allow
              Action:
                - "lambda:GetEventSourceMapping"
                - "lambda:DeleteEventSourceMapping"
                - "lambda:CreateEventSourceMapping"
              Resource: "*"
            - Effect: Allow
              Action:
                - "apigateway:*"
              Resource: 
                - "arn:aws:apigateway:*::*"
            - Effect: Allow
              Action:
                - "iam:GetRole"
                - "iam:CreateRole"
                - "iam:DeleteRole"
                - "iam:PutRolePolicy"
                - "iam:DeleteRolePolicy"
                - "iam:UpdateAssumeRolePolicyDocument"
              Resource: 
                - !Join [":", [ "arn:aws:iam:", !Ref "AWS::AccountId", "role/*" ]]
            - Effect: Allow
              Action:
                - "iam:AttachRolePolicy"
                - "iam:DetachRolePolicy"
              Resource: 
                - !Join [":", [ "arn:aws:iam:", !Ref "AWS::AccountId", "role/*" ]]
            - Effect: Allow
              Action:
                - "iam:PassRole"
              Resource: "*"
            - Effect: Allow
              Action:
                - "cloudformation:CreateChangeSet"
              Resource: 
                - "arn:aws:cloudformation:*:aws:transform/Serverless-2016-10-31"
            - Effect: Allow
              Action:
                - "kinesis:CreateStream"
                - "kinesis:DeleteStream"
                - "kinesis:DescribeStream"
                - "kinesis:GetRecords"
                - "kinesis:GetShardIterator"
                - "kinesis:ListStreams"
              Resource: "*"
            - Effect: Allow
              Action:
                - "states:CreateStateMachine"
                - "states:DeleteStateMachine"
              Resource: "*"
            - Effect: Allow
              Action:
                - "firehose:CreateDeliveryStream"
                - "firehose:DeleteDeliveryStream"
                - "firehose:DescribeDeliveryStream"
              Resource: "*"
            - Effect: Allow
              Action:
                - "sns:CreateTopic"
                - "sns:DeleteTopic"
                - "sns:GetTopicAttributes"
                - "sns:Subscribe"
              Resource: "*"
            - Effect: Allow
              Action: 
                - "codebuild:BatchGetBuilds"
                - "codebuild:StartBuild"
              Resource: "*"
            - Effect: Allow
              Action:
                - "cloudformation:DescribeStacks"
                - "cloudformation:DescribeChangeSet"
                - "cloudformation:CreateChangeSet"
              Resource: "*"

    AppPipeline:
      Type: AWS::CodePipeline::Pipeline
      Properties:
        Name: !Ref AWS::StackName
        RoleArn: !Sub ${BuildRole.Arn}
        ArtifactStore:
          Type: S3
          Location: !Ref ArtifactBucket
        Stages:
          - Name: Source
            Actions:
              - Name: SourceAction
                ActionTypeId:
                  Category: Source
                  Owner: ThirdParty
                  Version: 1
                  Provider: GitHub
                OutputArtifacts:
                  - Name: Source

                Configuration:
                  Owner: !Ref GitHubUser
                  Repo: !Ref Repo
                  Branch: !Ref Branch
                  OAuthToken: !Ref GitHubToken
                RunOrder: 1

          - Name: Build
            Actions:
              - Name: BuildSource
                InputArtifacts:
                  - Name: Source
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: 1
                  Provider: CodeBuild
                Configuration:
                  ProjectName: !Join ['-', [ !Ref 'AWS::StackName', 'build'] ]
                OutputArtifacts:
                  - Name: Built
                RunOrder: 1
                    
          - Name: Beta
            Actions:
              - Name: Deploy
                InputArtifacts:
                  - Name: Built
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
                Configuration:
                  ActionMode: CHANGE_SET_REPLACE
                  ChangeSetName: mychangeset
                  RoleArn: !GetAtt BuildRole.Arn
                  Capabilities: CAPABILITY_IAM
                  StackName: aws-serverless
                  TemplatePath: Built::analyzer_template.yaml
                  ParameterOverrides: !Sub |
                      {
                          "TweetBucketName" : "${TweetBucketName}",
                          "MaxLabelDetection" : "${MaxLabelDetection}",
                          "MinLabelConfidence" : "${MinLabelConfidence}",
                          "ComparisonFaceBucket" : "${ComparisonFaceS3Bucket}",
                          "ComparisonFaceKey" : "${ComparisonFaceKey}",
                          "SimilarityThreshold" : "${SimilarityThreshold}",  
                          "Email" : "${NotifierEmail}",
                          "SMS" : "${NotifierSMS}",
                          "ApplicationName": "${ApplicationName}",
                          "EnvironmentName": "${EnvironmentName}",
                          "DynamoSentimentTable": "${ApplicationName}-Sentiment-${EnvironmentName}" 
                      }
                RunOrder: 1

    Build:
      Type: AWS::CodeBuild::Project
      Properties:
        Name: !Join ['-', [ !Ref 'AWS::StackName', 'build'] ]
        Description: Build project for twitter sentiment analysis
        ServiceRole: !GetAtt BuildRole.Arn
        Artifacts:
            Type: CODEPIPELINE
            Name: Phantom
        Environment:
          Type: linuxContainer
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/python:2.7.12
        Source:
          Type: CODEPIPELINE
        TimeoutInMinutes: 10
        Tags:
          - Key: Project
            Value: Twitter Sentiment Analysis